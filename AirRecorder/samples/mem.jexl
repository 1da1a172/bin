var z = 0;
var t = new("java.lang.Thread");
while (z < 2) {
  airrecorder.stdout.println("loop number " + z);
  var x = 0;
  var initial_values = null;
  while (x < 1) {
    var result = airrecorder.cli.process('show mem fpapps');
    var lines = result.stdout.split("\n");
    for (line : lines) {
      if (line.contains("default")) {
        var values = line.trim().replaceAll(" +", " ");
        if (initial_values == null) {
        } else {
          if (values != initial_values) {
            airrecorder.stdout.println("fpapps: " + initial_values);
            airrecorder.stdout.println("fpapps: " + values);
          }
        }
        initial_values = values;
      }
    }
    x = x + 1;
  }
  x = 0;
  initial_values = null;
  while (x < 1) {
    var result = airrecorder.cli.process('show mem auth');
    var lines = result.stdout.split("\n");
    for (line : lines) {
      if (line.contains("default")) {
        var values = line.trim().replaceAll(" +", " ");
        if (initial_values == null) {
        } else {
          if (values != initial_values) {
            airrecorder.stdout.println("auth: " + initial_values);
            airrecorder.stdout.println("auth: " + values);
          }
        } 
        initial_values = values;
      }
    }
    x = x + 1;
  }
  x = 0;
  initial_values = null;
  while (x < 1) {
    var result = airrecorder.cli.process('show mem stm');
    var lines = result.stdout.split("\n");
    for (line : lines) {
      if (line.contains("default")) {
        var values = line.trim().replaceAll(" +", " ");
        if (initial_values == null) {
        } else {
          if (values != initial_values) {
            airrecorder.stdout.println("stm: " + initial_values);
            airrecorder.stdout.println("stm: " + values);
          }
        }
        initial_values = values;
      }
    }
    x = x + 1;
  }
  x = 0;
  initial_values = null;
  while (x < 1) {
    var result = airrecorder.cli.process('show mem fpcli');
    var lines = result.stdout.split("\n");
    for (line : lines) {
      if (line.contains("default")) {
        var values = line.trim().replaceAll(" +", " ");
        if (initial_values == null) {
        } else {
          if (values != initial_values) {
            airrecorder.stdout.println("fpcli: " + initial_values);
            airrecorder.stdout.println("fpcli: " + values);
          }
        }
        initial_values = values;
      }
    }
    x = x + 1;
  }
  t.sleep(10000);
  z= z + 1;
}
airrecorder.stdout.println("DONE");
return false;
