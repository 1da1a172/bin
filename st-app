#!/usr/bin/zsh

#
# Run an application in a new tmux session.
# The session will have the name of the application.
# The session terminates with the application.
# $1 is the shell command.
# Any additional arguments are passed as arguments of $1
# If $1 is not given, a dmenu prompt is used
# If there is a collision with an existing session, a serialized suffix is used
#

typeset -ra SESSIONS=($(tmux ls -F '#{session_name}'))
typeset app
typeset serial
typeset session
typeset args

# get the application to run, prompting with dmenu if necessary
app="${1-$(dmenu_path | dmenu)}"

# quit gracefully if no app was given/chosen
[[ -n "${app}" ]] || exit

# get the app's arguments, if any
if [[ $# > 1 ]]; then
  shift
  args="$@"
fi

# set session name
session="${app}"
## while there is a session name collision
while [[ -n "${SESSIONS[(R)${session}]}" ]]; do
  (( serial++ ))
  session="${app}${serial}"
done

# New session with the desired name
tmux new -d -s "${session}"

# pass the keystrokes to run the command we want
# It's exed'd so the session closes with the app
tmux send-keys -t "${session}" "exec ${app} ${args}" ENTER

# Open a terminal emulator and attach the session
exec /usr/bin/st tmux attach -t "${session}"
